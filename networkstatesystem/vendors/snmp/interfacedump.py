#!/usr/bin/env python## This Script polls all interface statistics using the OID form the IF-MIB object# It returns the data to the screen#from . import querysnmpdataimport string# This function retrieves the available interface datadef populateifdata(device, community):	oids = '1.3.6.1.2.1.2.2.1'		indextable = {}				walkreturn = querysnmpdata.snmpwalkoid(device, community, oids)			for currentrow in walkreturn:		for indexoid, val in currentrow:			replaced = string.replace(indexoid.prettyPrint(), oids, '')[1::]			value = val.prettyPrint()					(oidnumber, ifindex) = string.split(replaced,'.')			ifindex = int(ifindex)			oidnumber = int(oidnumber)					if ifindex in indextable:				indextable[ifindex][oidnumber] = value			else:				indextable[ifindex] = {}				indextable[ifindex][oidnumber] = value													return indextabledef printinterfacestats(interfacedata, format, hostname):		if format == 'csv':		csv = True	else:		csv = False	ignoreoids = [22, 21, 18, 12]		ifmib = {			1:"ifIndex",			2:"ifDescr",			3:"ifType",			4:"ifMtu",			5:"ifSpeed",			6:"ifPhysAddress",			7:"ifAdminStatus",			8:"ifOperStatus",			9:"ifLastChange",			10:"ifInOctets",			11:"ifUcastPkts",			12:"ifInNUcastPkts",			13:"ifInDiscards",			14:"ifInErrors",			15:"ifInUnknownProtos",			16:"ifOutOctets",			17:"ifOutUcastPkts",			18:"ifOutNUcastPkts",			19:"ifOutDiscards",			20:"ifOutErrors",			21:"ifOutQLen",			22:"ifSpecific"	}		# oid value of 8 or 7	ifstatus = {			1: "up",			2: "down",			3: "testing",			4: "unknown",			5: "dormant",			6: "notPresent",			7: "lowerLayerDown"	}	if csv == True:	# Print Header csv		print "hostname",							for id in sorted(ifmib):					for skip in ignoreoids:				if id == skip:					exclude = True					break				else:					exclude = False								if exclude != True:						print ",{0}".format(ifmib[id]),		print "\n",			# Print Detailed interference information	for ifindex in sorted(interfacedata):		if csv != True:			print "\nInterface Number", ifindex		else:			print "{0}".format(hostname),		for oid in sorted(interfacedata[ifindex]):			for skip in ignoreoids:				if oid == skip:					exclude = True					break				else:					exclude = False			if exclude != True:						if csv == True:					if oid == 8 or oid == 7:						print ",{0}".format(ifstatus[int(interfacedata[ifindex][oid])]),					# Need to fid display of MAC Addresses					#elif oid == 6:					#	print ",{0}".format(':'.join('%02x' % ord(b) for b in interfacedata[ifindex][oid]))					else:						print ",{0}".format(interfacedata[ifindex][oid]),				else: 						print "{0} ({1}) =".format(ifmib[oid], oid), 								if oid == 8 or oid == 7:						print ifstatus[int(interfacedata[ifindex][oid])]					# Need to fid display of MAC Addresses					#elif oid == 6:					#	print "{0}".format(interfacedata[ifindex][oid].hexdigits)					else:						print interfacedata[ifindex][oid]		print "\n",def printinterfacesumary(interfacedata, format, hostname):		numberup = 0	numberdown = 0	status = 0		for ifindex in sorted(interfacedata):		if interfacedata[ifindex][7] < interfacedata[ifindex][8]:			status = interfacedata[ifindex][8]		else:			status = interfacedata[ifindex][7]						if status == '1':			numberup = int(numberup + 1)		else:			numberdown = int(numberdown + 1)	percentfree = int((numberdown / (numberup + numberdown))*100)		if format == 'csv':		print 'up,down,percent'		print '{0},{1},{2},{3}'.format(hostname, numberup, numberdown, percentfree)	else:		print "Hostname: {0}".format(hostname)					print "Total Number up: {0}".format(numberup)		print "Total Number down: {0}".format(numberdown)		print "Percent Free: {0}".format(percentfree)